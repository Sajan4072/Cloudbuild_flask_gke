#build flask backend
steps:
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/high-age-441901-e5/ic4-flask-api:latest', './Backend/app/']
    id: 'containerize flask backend'

#push flask backend
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/high-age-441901-e5/ic4-flask-api:latest']
    id: 'Push flask backend'

#build nginx
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/high-age-441901-e5/ic4-nginx:latest', './Backend/nginx/']
    id: 'containerize nginx'

#push nginx
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/high-age-441901-e5/ic4-nginx:latest']
    id: 'Push nginx'

#build frontend
  - name: 'gcr.io/cloud-builders/docker'
  #specify the dockerfile name which is Dockerfile_react 
    args: ['build', '-t', 'gcr.io/high-age-441901-e5/ic4-frontend:latest', './Frontend/upload-form/']
    id: 'Containerize frontend'

#push frontend
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/high-age-441901-e5/ic4-frontend:latest']
    id: 'Push frontend'

options:
  logging: CLOUD_LOGGING_ONLY

#test